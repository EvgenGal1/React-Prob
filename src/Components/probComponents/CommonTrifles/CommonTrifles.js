import React, { useState, useEffect } from "react";
import { useDebugValue } from "react";
import "./CommonTrifles.scss";

// hooks –¥–ª—è KeyDown/KeyUp
import { useKeyPress } from "../hooks/useKeyPress";
import {
  useMultiKeyPress,
  areKeysPressed,
  MultiKeysPressed,
  Label,
} from "../hooks/useMultiKeyPress.jsx";

// –ø–æ–¥–∫–ª. UI –±–ª–æ–∫–æ–≤
import ArrowAccordion from "../../../js/includes/ArrowAccordion.js";

// —Ö—É–∫ useKeyPress + –æ—Ç–ª–∞–¥–∫–∞ (–Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–ª–≤—à., –æ—Ç—Å–ª–∂., –≤—ã–≤–æ–¥)=======================================================================================
// –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –æ–ø—Ä–µ–¥. –æ–¥–∏–Ω–æ—á–Ω—ã—Ö –∫–ª–≤—à. - –≤—ã–≤–æ–¥ + —à—Ä–∏—Ñ—Ç –∫ –æ–±–æ–∑–Ω–∞—á–µ–Ω–∏—é. –µ\–∏ –Ω–∞–¥–æ —á—Ç–æ–±—ã –≤—ã–≤–æ–¥ –æ—Ç—Ä–∞–∂–∞–ª—Å—è/–º–∏–≥–∞–ª, —Ç–æ –∫–æ–º–∏—Ç/—Ä–∞–∑–∫–æ–º–∏—Ç useKeyPress.useEffect.keyup –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ –º–∏–≥–∞–µ—Ç.
// !!! –ø–æ YT –≤–∏–¥–µ–æ RED Group –∏–ª–∏ https://usehooks.com/useKeyPress/
// * –ø–µ—Ä–µ–Ω–µ—Å—ë–Ω –≤ hooks/useKeyPress

// fn()useMultiKeyPress (–Ω–∞–∂–∞—Ç–∏–µ –Ω–µ—Å–∫ –∫–ª–∞–≤–∏—à)----------------------------------------------------------------------------------
// –ø—Ä–∏ –∑–∞–∂–∞—Ç–∏–∏ –Ω–µ—Å–∫-–∏—Ö –æ–ø—Ä–µ–¥. –∫–ª–≤—à. –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –ò –Ω–∞–∂–∞—Ç–∏–∏ –æ–¥–∏–Ω–æ—á–Ω—ã—Ö –æ–ø—Ä–µ–¥. –∫–ª–≤—à. - –≤—ã–≤–æ–¥ + —à—Ä–∏—Ñ—Ç –∫ –æ–±–æ–∑–Ω–∞—á–µ–Ω–∏—é. –ï\–∏ –Ω–∞–¥–æ —á—Ç–æ–±—ã –≤—ã–≤–æ–¥ –æ—Ç—Ä–∞–∂–∞–ª—Å—è/–º–∏–≥–∞–ª, —Ç–æ –∫–æ–º–∏—Ç/—Ä–∞–∑–∫–æ–º–∏—Ç useMultiKeyPress.useEffect.keyup –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ –º–∏–≥–∞–µ—Ç.
// !!! –Ω–∞–ø–∏—Å–∞–Ω–æ –Ω–∞ –æ—Å–Ω–æ–≤–µ - https://codesandbox.io/s/y3qzyr3lrz?file=/src/use-multi-key-press.js
// –æ–±—â. —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ - https://gist.github.com/gragland/b61b8f46114edbcf2a9e4bd5eb9f47f5
// * –ø–µ—Ä–µ–Ω–µ—Å—ë–Ω –≤ hooks useMultiKeyPress

// –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ CountryFlags ----------------------------------------------------------------------------------
function CountryFlags() {
  // –∫–æ–¥ –∏–∑ useMultiKeyPress
  // –æ–¥–Ω. –∫–ª–≤—à.
  const happyPress = useKeyPress("h");
  // const sadPress = useKeyPress("v");
  const robotPress = useKeyPress("r");
  const foxPress = useKeyPress("f");
  // –º–Ω–≥. –∫–ª–≤—à. –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –Ω–∞ –∫–æ–ª-–≤–æ –Ω–∞–∂–∞—Ç—ã—Ö –∫–ª–∞–≤–∏—à - https://gaming.stackexchange.com/questions/6669/how-do-i-remove-the-limit-on-pc-keyboard-button-presses
  const keysPressed = useMultiKeyPress();
  // const hsrfPressed = AreKeysPressed(["q", "w", "e"], keysPressed);
  const hsrfPressed = areKeysPressed(["q", "w", "e"], keysPressed);

  return (
    <div className="countryflags--">
      <div className="countryflags__descript--">
        <h3>—Ö—É–∫ useKeyPress (+ fn()useMultiKeyPress) + –æ—Ç–ª–∞–¥–∫–∞</h3>
      </div>
      <div className="countryflags__content--">
        <div className="countryflags__twoexp---">
          <div className="countryflags__twoexp_description---">
            <div>
              –ü—Ä–æ—Å–ª—É—à–∏–≤–∞–µ—Ç –ó–ê–∂–∞—Ç–∏–∏ –Ω–µ—Å–∫-–∏—Ö –æ–ø—Ä–µ–¥. –∫–ª–≤—à. –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –ò –ù–ê–∂–∞—Ç–∏–∏
              –æ–¥–∏–Ω–æ—á–Ω—ã—Ö –æ–ø—Ä–µ–¥. –∫–ª–≤—à. - –≤—ã–≤–æ–¥ + —à—Ä–∏—Ñ—Ç –∫ –æ–±–æ–∑–Ω–∞—á–µ–Ω–∏—é
            </div>
            <div>
              –ï\–∏ –Ω–∞–¥–æ —á—Ç–æ–±—ã –≤—ã–≤–æ–¥ –æ—Ç—Ä–∞–∂–∞–ª—Å—è/–º–∏–≥–∞–ª, —Ç–æ –∫–æ–º–∏—Ç/—Ä–∞–∑–∫–æ–º–∏—Ç
              useMultiKeyPress.useEffect.keyup –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ –º–∏–≥–∞–µ—Ç.
            </div>
            <Label value="–ù–∞–∂–º–∏—Ç–µ –æ–¥–∏–Ω–æ—á–Ω—ã–µ –∫–ª–∞–≤–∏—à–∏: " />
            <Label value="h" isBold={happyPress} />
            <Label value="r" isBold={robotPress} />
            <Label value="f" isBold={foxPress} />
            <br></br>
            <Label
              value="–ù–∞–∂–º–∏—Ç–µ –∫–ª–∞–≤–∏—à–∏ –≤–º–µ—Å—Ç–µ, –ø–æ—Ç–æ–º –æ–¥–∏–Ω–æ—á–Ω—ã–µ: q + w + e"
              isBold={hsrfPressed}
            />
          </div>
          –í–º–µ—Å—Ç–µ q w e, –æ—Ç–¥–µ–ª—å–Ω–æ h r f
          <div className="countryflags__twoexp_content---">
            {happyPress && "üòä"}
            {/* {sadPress && "üò¢"} */}
            {robotPress && "ü§ñ"}
            {foxPress && "ü¶ä"}
            <br />
            {/* // ~~~ –Ω–µ –ø–æ–Ω—è—Ç–Ω–æ - –≤—ã–≤–æ–¥–∏—Ç WIN –µ/–∏ –∑–∞–∂–∞—Ç—ã –≤—Å–µ keys + –≤ keysPressed(—á/–∑ useMultiKeyPress) –ø–æ–ª—É—á. (—Ö–∑ —á—Ç–æ?true?) + –ø–µ—Ä–µ–¥–∞–ª–∏ emoji */}
            <MultiKeysPressed
              keys={["q", "w", "e"]}
              keysPressed={keysPressed}
              emoji="WIN"
            />
          </div>
        </div>
      </div>
      <div className="countryflags__frame--">CountryFlags</div>
    </div>
  );
}

function KeyPressOne() {
  const isJapanPressed = useKeyPress("j");
  const isChinaPressed = useKeyPress("c");
  const isSouthKoreaPressed = useKeyPress("k");
  // const isAustraliaPressed = useKeyPress("a");
  return <div>KeyPressOne</div>;
}

class KeyPressOneAS extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      openArrowAccord: true,
    };
    this.RefActivCl = React.createRef();
    this.RefOpenDop = React.createRef();
    this.RefOpenCont = React.createRef();
  }
  handleClickRef() {
    this.RefActivCl.current.classList.toggle("_active");
    this.RefOpenDop.current.classList.toggle("openDop");
    this.RefOpenCont.current.classList.toggle("openCont");
    // this.setState((prevState) => ({
    //   openArrowAccord: !prevState.openArrowAccord,
    // }));
  }
  toggleArrowAccord = () => {
    this.setState((prevState) => ({
      openArrowAccord: !prevState.openArrowAccord,
    }));
  };

  render() {
    // –ø–µ—Ä–≤—ã–π –∫–æ–¥ –∏–∑ YT RED Group
    return (
      //  ----------------------------------------------------------------------------------
      <div className="KeyPressOne---">
        <div
          className="KeyPressOne__descript--"
          ref={this.RefActivCl}
          onClick={() => {
            this.handleClickRef();
            this.toggleArrowAccord(this.openArrowAccord);
          }}
        >
          <div
            className="temporary"
            style={{ display: "none" }}
            ref={this.RefOpenDop}
            //  style={{ fontWeight: "bold", color: "red" }}
          >
            –¢–∞–∫ –∂–µ —Ä–∞–∑–æ–±—Ä–∞—Ç—å:
            <p>https://realadmin.ru/coding/keyboard-js.html - –ø—Ä–æ—Å—Ç–æ</p>
            <p>https://habr.com/ru/post/244041/ - –ø—Ä–æ—Å—Ç–æ</p>
            <p>
              https://codesandbox.io/s/multiple-keys-in-order-vpovi?file=/src/hooks/useAllKeysPress.js
              - –ù–µ—Å–∫–æ–ª—å–∫–æ –∫–ª—é—á–µ–π –ø–æ –ø–æ—Ä—è–¥–∫—É(–Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–æ–ø–∏—Å–∞–Ω–Ω–æ–≥–æ)
            </p>
            <p>
              https://codesandbox.io/s/multiple-keys-jhfdn - –ù–µ—Å–∫–æ–ª—å–∫–æ –∫–ª—é—á–µ–π
            </p>
            <p>
              https://gist.github.com/gragland/b61b8f46114edbcf2a9e4bd5eb9f47f5
              - —Å–ª–µ–¥–∏—Ç—å –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ö
            </p>
          </div>
          <div>
            –ü—Ä–æ—Å–ª—É—à–∏–≤–∞–µ—Ç –ù–ê–∂–∞—Ç–∏–∏ –æ–ø—Ä–µ–¥. –æ–¥–∏–Ω–æ—á–Ω—ã—Ö –∫–ª–≤—à. - –≤—ã–≤–æ–¥ + —à—Ä–∏—Ñ—Ç –∫
            –æ–±–æ–∑–Ω–∞—á–µ–Ω–∏—é.
          </div>
          <div>
            –ï\–∏ –Ω–∞–¥–æ —á—Ç–æ–±—ã –≤—ã–≤–æ–¥ –æ—Ç—Ä–∞–∂–∞–ª—Å—è/–º–∏–≥–∞–ª, —Ç–æ –∫–æ–º–∏—Ç/—Ä–∞–∑–∫–æ–º–∏—Ç
            useKeyPress.useEffect.keyup –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ –º–∏–≥–∞–µ—Ç.
          </div>
          <p>–ù–∞–∂–º–∏—Ç–µ –∫–ª–∞–≤–∏—à–∏ 'J', 'C', 'K'</p>
          <ArrowAccordion
            // toggleArrowAccord={this.toggleArrowAccord}
            openArrowAccord={this.state.openArrowAccord}
          />
        </div>
        <div ref={this.RefOpenCont} className="KeyPressOne__content--">
          {/* –ø—Ä–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ —É—Å–ª–æ–≤–∏—è. –ø—Ä–∏ –Ω–∞–∂–∞—Ç–æ–π –∫–ª–≤—à –≤—ã–π–¥–µ—Ç –ò div */}
          {/* {isJapanPressed && <div>üáØüáµ</div>}
          {isChinaPressed && <div>üá®üá≥</div>}
          {isSouthKoreaPressed && <div>üá∞üá∑</div>} */}
          {/* {isAustraliaPressed && <div>üá¶üá∫</div>} */}
          {/* <MultiKeysPressed
              keys={["q", "w", "e"]}
              keysPressed={keysPressed}
              emoji="WIN"
            /> */}
        </div>
      </div>
      //  ----------------------------------------------------------------------------------
    );
  }
}

// –ø–æ–∫–ª. –≤ –æ–±—â–∏–π –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∏ –∏–º–ø–æ—Ä—Ç  =======================================================================================
class CommonTrifles extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      openArrowAccord: true,
    };
    this.RefActivCl = React.createRef();
    this.RefOpenDop = React.createRef();
    this.RefOpenCont = React.createRef();
  }
  handleClickRef() {
    this.RefActivCl.current.classList.toggle("_active");
    this.RefOpenDop.current.classList.toggle("openDop");
    this.RefOpenCont.current.classList.toggle("openCont");
    // this.setState((prevState) => ({
    //   openArrowAccord: !prevState.openArrowAccord,
    // }));
  }
  toggleArrowAccord = () => {
    this.setState((prevState) => ({
      openArrowAccord: !prevState.openArrowAccord,
    }));
  };
  render() {
    return (
      <div className="CommonTrifles accordion">
        <div
          className="CommonTrifles__descript"
          ref={this.RefActivCl}
          onClick={() => {
            this.handleClickRef();
            this.toggleArrowAccord(this.openArrowAccord);
          }}
        >
          <h3>—Ö—É–∫ useKeyPress (+ fn()useMultiKeyPress) + –æ—Ç–ª–∞–¥–∫–∞</h3>
          <div
            className="temporary"
            style={{ display: "none" }}
            ref={this.RefOpenDop}
          >
            <code style={{ color: "red" }}>!!!</code> –î–û–†–ê–ë–û–¢–ê–¢–¨{" "}
            <code style={{ color: "red" }}>!!!</code>
            –ù–∞–ø–∏—Å–∞—Ç—å –∫–æ–¥ –ø–æ —Å—á–∏—Ç—ã–≤–∞–Ω–∏—é –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–ª–∞–≤–∏—à–∏. –†–∞–∑–Ω—ã–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏ –¥–ª—è
            —Ä–∞–∑–Ω—ã—Ö —Ä–∞—Å–∫–ª–∞–¥–æ–∫, —ç–∫—Ä–∞–Ω–æ–≤, —Å–≤–µ—Ç.—Ç–µ–º, –¥–æ—Å—Ç—É–ø–æ–≤, –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏ –ø—Ä.
            <p>–ü—Ä–∏–º–µ—Ä—ã –∫–æ–º–±–∏–Ω. –Ω–∞–∂. –Ω–∞ –∫–ª–≤—à.:</p>
            <p>
              –ø—Ä–∏ EN —Ä–∞—Å–∫–ª–¥. - ",jkmit", + –¥–æ–±. —Ü–≤.—Å—Ö–µ–º–∞ —Ä–∞–∑–Ω—ã—Ö —Ä–∞—Å–∫–ª–∞–¥–æ–∫,
              —ç–∫—Ä–∞–Ω–æ–≤, —Å–≤–µ—Ç.—Ç–µ–º, –¥–æ—Å—Ç—É–ø–æ–≤, –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏ –ø—Ä.{" "}
            </p>
            <p>–¥–æ—Å—Ç—É–ø –≤ –∞–ª—å–±–æ–º –ø—Ä–∏ –Ω–∞–±–æ—Ä–µ –∏–º–µ–Ω–∏ –∞–ª—å–±–æ–º–∞ –≤–æ –≤–∫–ª–∞–¥–∫–µ –∞–ª—å–±–æ–º–æ–≤</p>
            <p>
              –∑–∞–ø–∏—Å—å –≤ localStorage –ø—Ä–∏ –Ω–∞–±–æ—Ä–µ "localStorage+" –∏ —Å–≤–æ–µ–≥–æ –∏–º–µ–Ω–∏ –≤
              CamelCase(–≤–µ—Ä–±–ª—é–∂—å–µ–º —Å—Ç–∏–ª–µ)
            </p>
          </div>
          <ArrowAccordion
            // toggleArrowAccord={this.toggleArrowAccord}
            openArrowAccord={this.state.openArrowAccord}
          />
        </div>
        <div ref={this.RefOpenCont} className="CommonTrifles__content">
          <CountryFlags />
        </div>
        <div className="CommonTrifles__frame">CommonTrifles.js</div>
      </div>
    );
  }
}

export default CommonTrifles;
